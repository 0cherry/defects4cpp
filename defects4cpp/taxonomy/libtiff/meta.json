{
  "info": {
    "url": "https://github.com/vadz/libtiff.git",
    "short-desc": "This software provides support for the Tag Image File Format (TIFF), a widely used format for storing image data.",
    "vcs": "git"
  },
  "common": {
    "build": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "./autogen.sh",
            "./configure",
            "make clean",
            "make -j @DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "build-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "./autogen.sh",
            "./configure CFLAGS=\"-fprofile-arcs -ftest-coverage -g -O0\" LDFLAGS=\"-lgcov\"",
            "make clean",
            "make -j @DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "test-type": "ctest",
    "test": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"cd test; make check-TESTS --no-print-directory TESTS=$(make print-TESTS | cut -d ' ' -f $(cat ../DPP_TEST_INDEX))\""
          ]
        }
      ]
    },
    "test-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"cd test; make check-TESTS --no-print-directory TESTS=$(make print-TESTS | cut -d ' ' -f $(cat ../DPP_TEST_INDEX))\""
          ]
        }
      ]
    },
    "gcov": {
      "exclude": [],
      "commands": [
        {
          "type": "docker",
          "lines": [
            "mkdir gcov",
            "bash -c 'find . -type f -name \"*.o\" -execdir gcov --preserve-paths  {} \\;'",
            "bash -c 'find /home/workspace/ -type f -name \"*.gcov\" -execdir mv {} /home/workspace/gcov \\;'",
            "bash -c 'find /home/workspace/ -type f -name \"*.gcda\" -delete'"
          ]
        }
      ]
    }
  },
  "defects": [
    {
      "hash": "d9783e4a1476b6787a51c5ae9e9b3156527589f0",
      "num_cases": 2,
      "case": [],
      "description": "blah detailed description (issue link, etc.)",
      "extra_tests": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"touch /tmp/tmpout.tif; tools/tiffcrop .dpp/CVE-2016-5321.tif /tmp/tmpout.tif\""
          ],
          "is_pass": false
        }
      ]
    }
  ]
}
